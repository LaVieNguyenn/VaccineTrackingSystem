@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<VaccineTrakingSystem.DAL.Models.Vaccine>

<!-- CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">

<!-- JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<div class="page-title">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                <h2><i class="fa fa-th"></i> Vaccine Schedule </h2>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="https://localhost:7017/">Home</a></li>
                    <li class="breadcrumb-item active">Vaccine Manager</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<div class="container mt-4">
    <!-- Title & Actions -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3>Vaccine List</h3>
        <div>
            <button class="btn btn-info" id="toggleColumnsBtn">Column Toggle</button>
            <button class="btn btn-success" id="addVaccineBtn">Add Vaccine</button>
        </div>
    </div>

    <!-- Vaccine Table -->
    <table id="vaccineTable" class="table table-striped">
        <thead>
            <tr>
                <th class="toggle-col " data-col="0">Vaccine ID</th>
                <th class="toggle-col default-col" data-col="1">Vaccine Name</th>
                <th class="toggle-col default-col" data-col="2">Description</th>
                <th class="toggle-col" data-col="3">Number Of Doses</th>
                <th class="toggle-col" data-col="4">Vaccine Type</th>
                <th class="toggle-col" data-col="5">Manufacturer</th>
                <th class="toggle-col" data-col="6">Production Date</th>
                <th class="toggle-col" data-col="7">Expiration Period</th>
                <th class="toggle-col default-col" data-col="8">Created At</th>
                <th class="toggle-col default-col" data-col="9">Updated At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vaccine in Model)
            {
                <tr>
                    <td class="toggle-col " data-col="0">@vaccine.VaccineId</td>
                    <td class="toggle-col default-col" data-col="1">
                        @vaccine.VaccineName
                    </td>
                    <td class="toggle-col default-col" data-col="2">@vaccine.Description</td>
                    <td class="toggle-col" data-col="3">@vaccine.NumberOfDoses</td>
                    <td class="toggle-col" data-col="4">@vaccine.VaccineType</td>
                    <td class="toggle-col" data-col="5">@vaccine.Manufacturer</td>
                    <td class="toggle-col" data-col="6">@vaccine.ProductionDate</td>
                    <td class="toggle-col" data-col="7">@vaccine.ExpirationPeriod</td>
                    <td class="toggle-col default-col" data-col="8">@vaccine.CreatedAt</td>
                    <td class="toggle-col default-col" data-col="9">@vaccine.UpdatedAt</td>
                    <td>
                        <button class="btn btn-primary edit-btn" data-id="@vaccine.VaccineId">Edit</button>
                        <button class="btn btn-danger delete-btn" data-id="@vaccine.VaccineId">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>

<script>
    $(document).ready(function () {
        var table = $('#vaccineTable').DataTable();

        // Toggle Columns
        $('#toggleColumnsBtn').on("click", function () {
            let columnToggles = "";

            $('#vaccineTable thead th').each(function (index) {
                let isChecked = table.column(index).visible() ? "checked" : "";
                columnToggles += `
                    <input type="checkbox" id="col${index}" data-col="${index}" ${isChecked}>
                    <label for="col${index}">${$(this).text()}</label><br>
                `;
            });

            Swal.fire({
                title: "Toggle Columns",
                html: `<div class="text-left">${columnToggles}</div>`,
                showCancelButton: true,
                confirmButtonText: "Apply",
                preConfirm: () => {
                    $('#vaccineTable thead th').each(function (index) {
                        let checkbox = $("#col" + index);
                        table.column(index).visible(checkbox.is(":checked"));
                    });
                }
            });
        });

        // Add Vaccine
        $('#addVaccineBtn').on("click", function () {
            Swal.fire({
                title: "Add New Vaccine",
                width: 600,
                html: `
                    <input id="vaccineName" class="swal2-input" placeholder="Vaccine Name">
                    <input id="numberOfDoses" class="swal2-input" type="number" placeholder="Doses" min="1">
                    <input id="vaccineType" class="swal2-input" placeholder="Vaccine Type">
                    <input id="manufacturer" class="swal2-input" placeholder="Manufacturer">
                    <input id="productionDate" class="swal2-input" type="date">
                    <input id="expirationPeriod" class="swal2-input" type="number" placeholder="Expiration Period" min="1">
                    <textarea id="description" class="swal2-textarea" placeholder="Description"></textarea>
                `,
                showCancelButton: true,
                confirmButtonText: "Save",
                preConfirm: () => {
                    let data = {
                        VaccineName: $("#vaccineName").val(),
                        NumberOfDoses: parseInt($("#numberOfDoses").val()),
                        Manufacturer: $("#vaccineType").val(),
                        Manufacturer: $("#manufacturer").val(),
                        ExpirationPeriod: parseInt($("#expirationPeriod").val()),
                        ProductionDate: $("#productionDate").val(),
                        Description: $("#description").val()
                    };

                    if (!data.VaccineName || !data.NumberOfDoses|| !data.vaccineType || !data.Manufacturer || !data.ExpirationPeriod || !data.ProductionDate || !data.Description) {
                        Swal.showValidationMessage("All fields are required!");
                        return false;
                    }

                    return fetch("/VaccineManagerStaff/CreateVaccine", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(data)
                    }).then(response => {
                        if (!response.ok) throw new Error("Failed to create vaccine.");
                        return response.json();
                    }).catch(error => Swal.showValidationMessage(error.message));
                }
            }).then(result => {
                if (result.isConfirmed) Swal.fire("Success!", "Vaccine added.", "success").then(() => location.reload());
            });
        });
        //edit modal
         $(document).on("click", ".edit-btn", function () {
        let row = $(this).closest("tr");
        let vaccineId = $(this).data("id");

        let vaccineName = row.find("td:eq(1)").text().trim();
        let description = row.find("td:eq(2)").text().trim();
        let numberOfDoses = row.find("td:eq(3)").text().trim();
        let vaccineType = row.find("td:eq(4)").text().trim();
        let manufacturer = row.find("td:eq(5)").text().trim();
        let productionDate = row.find("td:eq(6)").text().trim();
        let expirationPeriod = row.find("td:eq(7)").text().trim();
            let parts = productionDate.split("/");
    if (parts.length === 3) {
        var productionDateFormatted = `${parts[2]}-${parts[0].padStart(2, "0")}-${parts[1].padStart(2, "0")}`;
    } else {
        var productionDateFormatted = "N/A";
    }
        Swal.fire({
            title: "Edit Vaccine",
            width: 600,
            html: `
                <input id="editVaccineName" class="swal2-input" value="${vaccineName}">
                <textarea id="editDescription" class="swal2-textarea">${description}</textarea>
                <input id="editNumberOfDoses" class="swal2-input" type="number" value="${numberOfDoses}" min="1">
                <input id="editVaccineType" class="swal2-input" value="${vaccineType}">
                <input id="editManufacturer" class="swal2-input" value="${manufacturer}">
                <input id="editProductionDate" class="swal2-input" type="date" value="${productionDateFormatted}">
                <input id="editExpirationPeriod" class="swal2-input" type="number" value="${expirationPeriod}" min="1">
            `,
            showCancelButton: true,
            confirmButtonText: "Save",
            preConfirm: () => {
                let data = {
                    VaccineId: vaccineId,
                    VaccineName: $("#editVaccineName").val(),
                    Description: $("#editDescription").val(),
                    NumberOfDoses: parseInt($("#editNumberOfDoses").val()),
                    vaccineType: $("#editVaccineType").val(),
                    Manufacturer: $("#editManufacturer").val(),
                    ProductionDate: $("#editProductionDate").val(),
                    ExpirationPeriod: parseInt($("#editExpirationPeriod").val()),
                };

                if (!data.VaccineName || !data.Description || !data.NumberOfDoses || !data.vaccineType || !data.Manufacturer || !data.ProductionDate || !data.ExpirationPeriod) {
                    Swal.showValidationMessage("All fields are required!");
                    return false;
                }

                return fetch("/VaccineManagerStaff/EditAjax", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data)
                }).then(response => {
                    if (!response.ok) throw new Error("Failed to update vaccine.");
                    return response.json();
                }).catch(error => Swal.showValidationMessage(error.message));
            }
        }).then(result => {
            if (result.isConfirmed) Swal.fire("Success!", "Vaccine updated.", "success").then(() => location.reload());
        });
    });

        // Delete Vaccine
            $(document).on("click", ".delete-btn", function () {
        let vaccineId = $(this).data("id");
        console.log("Sending data:", JSON.stringify({vaccineId}));

        Swal.fire({
            title: "Are you sure?",
            text: "This action cannot be undone!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, delete it!"
        }).then(result => {
            if (result.isConfirmed) {
                   $.ajax({
        url: "/VaccineManagerStaff/DeleteAjax",
        type: "POST",
        contentType: "application/json",
        data: JSON.stringify({ VaccineId: vaccineId }),
        success: function () {
            Swal.fire("Deleted!", "Vaccine has been removed.", "success").then(() => location.reload());
        },
        error: function () {
            Swal.fire("Error!", "Failed to delete vaccine.", "error");
        }
    });

            }
        });
    });

    });
</script>
<style>
    .swal2-input, .swal2-textarea {
        width: 100%;
        height: 40px; /* Điều chỉnh chiều cao nếu cần */
        font-size: 16px; /* Đồng bộ font */
        box-sizing: border-box; /* Đảm bảo padding không làm thay đổi kích thước */
    }

    .swal2-textarea {
        height: 80px; /* Chỉnh chiều cao cho textarea */
        resize: none; /* Ngăn người dùng thay đổi kích thước */
    }

</style>