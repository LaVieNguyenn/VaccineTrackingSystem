@using VaccineTrakingSystem.DAL.Models
@model IEnumerable<CenterInfo>
@{
    ViewData["Title"] = "Center List";
}
<section class="section">

    <div class="modal fade" id="editCenterModal" tabindex="-1" aria-labelledby="editCenterModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title fw-bold" id="editCenterModalLabel">Edit Center</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editCenterForm">
                        <input type="hidden" id="editCenterId">

                        <div class="mb-3">
                            <label for="editCenterName" class="form-label fw-semibold">Center Name</label>
                            <input type="text" class="form-control" id="editCenterName" required>
                        </div>

                        <div class="mb-3">
                            <label for="editAddress" class="form-label fw-semibold">Address</label>
                            <input type="text" class="form-control" id="editAddress" required>
                        </div>

                        <div class="mb-3">
                            <label for="editContactInfo" class="form-label fw-semibold">Contact Info</label>
                            <input type="text" class="form-control" id="editContactInfo">
                        </div>

                        <div class="mb-3">
                            <label for="editDescription" class="form-label fw-semibold">Description</label>
                            <input type="text" class="form-control" id="editDescription">
                        </div>

                        <div class="mb-3">
                            <label for="editServiceDetails" class="form-label fw-semibold">Service Details</label>
                            <input type="text" class="form-control" id="editServiceDetails">
                        </div>

                        <div class="d-flex justify-content-between">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="createCenterModal" tabindex="-1" aria-labelledby="createCenterModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title fw-bold" id="createCenterModalLabel">Create New Center</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="createCenterForm">
                        <div class="mb-3">
                            <label for="createCenterName" class="form-label fw-semibold">Center Name</label>
                            <input type="text" class="form-control" id="createCenterName" required>
                        </div>

                        <div class="mb-3">
                            <label for="createAddress" class="form-label fw-semibold">Address</label>
                            <input type="text" class="form-control" id="createAddress" required>
                        </div>

                        <div class="mb-3">
                            <label for="createContactInfo" class="form-label fw-semibold">Contact Info</label>
                            <input type="text" class="form-control" id="createContactInfo">
                        </div>

                        <div class="mb-3">
                            <label for="createDescription" class="form-label fw-semibold">Description</label>
                            <input type="text" class="form-control" id="createDescription">
                        </div>

                        <div class="mb-3">
                            <label for="createServiceDetails" class="form-label fw-semibold">Service Details</label>
                            <input type="text" class="form-control" id="createServiceDetails">
                        </div>

                        <div class="d-flex justify-content-between">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Create Center</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="page-wrapper">
                    <h3 class="fw-bold text-dark mb-4">Center List</h3>

                    <div class="d-flex justify-content-end mb-3">
                        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createCenterModal">Create New Center</button>

                    </div>

                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered shadow-sm">
                                <thead class="table-light text-primary text-center">
                                    <tr>
                                        <th style="width: 15%;text-align:center">Center ID</th>
                                        <th style="width: 20%;text-align:center">Center Name</th>
                                        <th style="width: 25%;text-align:center">Address</th>
                                        <th style="width: 20%;text-align:center">Contact Info</th>
                                        <th style="width: 15%;text-align:center">Description</th>
                                        <th style="width: 20%;text-align:center">Service Details</th>
                                        <th style="width: 18%;text-align:center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var center in Model)
                                    {
                                        <tr class="align-middle text-center">
                                            <td style="text-align:center">@center.CenterId</td>
                                            <td style="text-align:center" class="fw-bold">@center.CenterName</td>
                                            <td style="text-align:center">@center.Address</td>
                                            <td style="text-align:center">@center.ContactInfo</td>
                                            <td style="text-align:center">@center.Description</td>
                                            <td style="text-align:center">@center.ServiceDetails</td>
                                            <td class="text-center">
                                                <div class="d-flex justify-content-center">
                                                    <button class="btn btn-warning btn-sm btn-spacing" onclick="editCenter(@center.CenterId)">
                                                        <i class="fa fa-edit"></i> Edit
                                                    </button>
                                                    <button class="btn btn-danger btn-sm" onclick="deleteCenter(@center.CenterId)">
                                                        <i class="fa fa-trash"></i> Delete
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-center text-muted">No centers found.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- Bootstrap 5 CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Bootstrap 5 JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<style>
    .btn-spacing {
        margin-right: 10px;
    }

    .modal-body .form-label {
        font-weight: 600;
    }

    .modal-body .form-control {
        padding: 10px;
        border-radius: 5px;
    }

    .modal-body .btn {
        padding: 10px 15px;
        font-weight: 600;
    }

    .table {
        border-collapse: collapse;
        width: 100%;
    }

        .table th, .table td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
        }

        .table thead th {
            background-color: #f8f9fa;
            border: 1px solid #ccc;
        }

        .table tbody tr:hover {
            background-color: #f1f1f1;
        }
</style>

<script>
    function editCenter(centerId) {
        fetch(`/CenterInfo/GetCenterInforById/${centerId}`)
            .then(response => response.json())
            .then(data => {
                if (data) {
                    document.getElementById("editCenterId").value = data.centerId;
                    document.getElementById("editCenterName").value = data.centerName;
                    document.getElementById("editAddress").value = data.address;
                    document.getElementById("editContactInfo").value = data.contactInfo;
                    document.getElementById("editDescription").value = data.description;
                    document.getElementById("editServiceDetails").value = data.serviceDetails;

                    var editModal = new bootstrap.Modal(document.getElementById('editCenterModal'));
                    editModal.show();
                } else {
                    Swal.fire("Error!", "Center not found!", "error");
                }
            })
            .catch(() => Swal.fire("Error!", "Failed to load center data!", "error"));
    }

    document.getElementById("editCenterForm").addEventListener("submit", function (event) {
        event.preventDefault();

        var updatedCenter = {
            CenterId: document.getElementById("editCenterId").value,
            CenterName: document.getElementById("editCenterName").value,
            Address: document.getElementById("editAddress").value,
            ContactInfo: document.getElementById("editContactInfo").value,
            Description: document.getElementById("editDescription").value,
            ServiceDetails: document.getElementById("editServiceDetails").value
        };

        fetch(`/CenterInfo/UpdateCenterInfor`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "X-Requested-With": "XMLHttpRequest"
            },
            body: JSON.stringify(updatedCenter)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire("Updated!", "Center updated successfully.", "success")
                    .then(() => location.reload());
            } else {
                Swal.fire("Error!", "Failed to update center.", "error");
            }
        })
        .catch(() => Swal.fire("Error!", "Something went wrong!", "error"));
    });

    function deleteCenter(centerId) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#6c757d",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/CenterInfo/DeleteCenterInfo/${centerId}`, {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json",
                        "X-Requested-With": "XMLHttpRequest"
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire("Deleted!", "Center has been deleted.", "success")
                            .then(() => location.reload());
                    } else {
                        Swal.fire("Error!", "Failed to delete center.", "error");
                    }
                })
                .catch(() => Swal.fire("Error!", "Something went wrong!", "error"));
            }
        });
    }

    document.getElementById("createCenterForm").addEventListener("submit", function (event) {
        event.preventDefault();

        const centerData = {
            centerName: document.getElementById("createCenterName").value.trim(),
            address: document.getElementById("createAddress").value.trim(),
            contactInfo: document.getElementById("createContactInfo").value.trim(),
            description: document.getElementById("createDescription").value.trim(),
            serviceDetails: document.getElementById("createServiceDetails").value.trim()
        };

        fetch("/CenterInfo/CreateCenterInfor", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(centerData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire("Success!", "Center created successfully.", "success")
                    .then(() => location.reload());
            } else {
                Swal.fire("Error!", data.message || "Failed to create center.", "error");
            }
        })
        .catch(() => Swal.fire("Error!", "Something went wrong!", "error"));
    });
</script>
